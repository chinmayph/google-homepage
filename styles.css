body {
    margin: 0;
    font-family: arial, sans-serif;
    font-size: 0.9em;   /* em means relative to the font size of the element. This says 0.9 times the size of the current font. */
}

a {
    margin: 5px 5px;
    text-decoration: none;
    color: black;
}

a:hover {
    text-decoration: underline;
}

nav {
    display: flex;  /* By default, the flex-direction is set to row. */
    justify-content: space-between; /* Used to align the flex items. */
}

#menu-left {
    display: flex;
    justify-content: flex-start;    /* flex-start is the default, aligns items at the beginning of the container. */
    padding-left: 20px; /* There is a default padding of about 40px from the user agent stylesheet. */
    align-items: center;
}

#menu-right {
    display: flex;
    justify-content: flex-end;  /* Aligns the flex items at the end of the container. */
    margin-right: 20px;
    align-items: center;
}

/* Let's space out the icons and links that are housed directly in an unordered list. */
ul > a, ul > img {
    padding: 0 8px;
}

#my-apps:hover {
    border-radius: 200px;
    box-shadow: 0 0 10px 0 gainsboro;
}

#sign-in {
    border-radius: 0;
    border: 1px solid;
    background: #4285f4;
    color: white; 
    font-weight: bold;
    padding: 0 12px;
    line-height: 28px;
}

section {
    display: flex;
    flex-direction: column;
    align-items: center;    /* Note that because the flex direction is column we want to use align items instead of justify content. */
    margin-top: 5vh;   /* % is relative to the parent value. So if outer div is width: 200px and inner div has width 50% inner will be 100px. vh is relative to browser window (viewport) */
}

h1 {
    display: flex;
    justify-content: center;
    padding-top: 109px;
}

#my-input-container {
    display: flex;
    justify-content: space-between;
    width: 600px;
    height: 38px;
    border: 1px solid gainsboro;
    border-radius: 20px;
}

#my-input-container:hover {
    box-shadow: 0 0 10px gainsboro;
}


#my-input-container > input {
    flex-grow: 8;   /* Make the input wider than the images. */
    border: none;
    outline: none;  /* When clicking on the input it gets a black highlight. */
}

img:hover {
    cursor: pointer;
}

#my-buttons-container {
    display: flex;
    flex-direction: row;    /* The default but specifying anyway. */
    padding-top: 33px;
}

button {
    background-color: #f2f2f2;
    color: #5F6368;
    border-radius: 4px;
    border: none;
    min-width: 54px;
    height: 36px;
    padding-left: 20px;
    padding-right: 20px;
    margin-left: 4px;
    margin-right: 4px;
    font-size: 14px;
}

button:hover {
    cursor: pointer;
    color: black;
    border-radius: 4px;
    border: 1px solid #f2f2f2;
    box-shadow: 0 0 10px gainsboro;
    
}

footer {
    background-color: #F2F2F2;
    position: fixed;    /* Element is positioned relative to the viewport, in the same place even if page is scrolled. You then position with top, right, bottom, and left properties.*/
    width: 100vw;
    bottom: 0;  /* Affects the vertical position of the element. */
}

#footer-left {
    color: #5f6368;
    display: flex;
    justify-content: flex-start;    /* flex-start is the default, aligns items at the beginning of the container. */
    padding-left: 20px; /* There is a default padding of about 40px from the user agent stylesheet. */
    align-items: center;
}

#footer-right {
    color: #5f6368;
    display: flex;
    justify-content: flex-end;  /* Aligns the flex items at the end of the container. */
    margin-right: 20px;
    align-items: center;
}

/* Start the responsiveness of the screen. */

@media (max-width: 630px) {

    #footer-nav {
        flex-direction: column;
    }

    #footer-left {
        justify-content: center;
    }

    #footer-right {
        justify-content: center;
    }

    #my-input-container {
        width: 95vw;
    }


}

@media (max-height: 522px) {

    body {
        overflow-x: hidden;
    }
    section {
        margin-bottom: 20px;

    }
    footer {
        position: relative;
    }
}

@media (max-height: 570px) and (max-width: 630px) {

    body {
        overflow-x: hidden;
    }
    section {
        margin-bottom: 13px;

    }
    footer {
        position: relative;
    }
    
}